/*
 * Yagna Market API
 *
 * The version of the OpenAPI document: 1.6.1
 *
 * Generated by: https://openapi-generator.tech
 */

use chrono::{DateTime, Utc};
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AgreementProposal {
    /// id of the proposal to be promoted to the Agreement
    #[serde(rename = "proposalId")]
    pub proposal_id: String,
    /// End of validity period. Agreement needs to be accepted, rejected or cancellled before this date; otherwise will expire
    #[serde(rename = "validTo")]
    pub valid_to: DateTime<Utc>,
}

impl AgreementProposal {
    pub fn new(proposal_id: String, valid_to: DateTime<Utc>) -> AgreementProposal {
        AgreementProposal {
            proposal_id,
            valid_to,
        }
    }
}
